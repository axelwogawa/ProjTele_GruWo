==== Auswahl des Frameworks ====

Unsere Recherchen nach verfügbarer HWR-Software haben (entgegen erster Vermutungen) eine eher überschaubare Sammlung von Frameworks und Toolkits hervorgebracht. Im Folgenden werden wir einige davon kurz vorstellen. Um uns einen Gesamtüberblick zu verschaffen, haben wir die ermittelten Vertreter sowie aus den [[start#Anforderungen an das Framework|Anforderungen an das Framework]] abgeleitete Vergleichskriterien tabellarisch aufgelistet: s. [[https://wiki.agtele.eats.et.tu-dresden.de/lib/exe/fetch.php?media=protele:documentation:hand_writing:wogawa_gruetze:anhaenge:framework_comparison.pdf|Anhang 1]]. Dabei haben wir so viele Informationen zusammengetragen, wie wir konnten, einige Tabellenfelder mussten jedoch auf Grund fehlender Informationen auf den Webseiten leer bleiben.

Die wichtigsten Vertreter:
  * **WritePad SDK 5.0 for Android** (s. [[start#Quellennachweis und Literaturverzeichnis|[2]]]): Der Anbieter //PhatWare Corp.(r)// bietet dieses SDK in verschiedenen Versionen (u.a. für //iOs//, //Android//, //Windows (Phone)//) an und verspricht für die Android-Variante umfangreieche Funktionalitäten, wie die Unterstützung von zwölf Sprachen und unterschiedlichen Schreibstilen, Wortvervollständigung und weiteres. Es steht eine zeitlich begrenzte kostenlose Developer-Version zum //GitHub//-Download zur Verfügung. Größter Nachteil an diesem Paket ist die fehlende Dokumentation für Java, was den Einstieg sehr erschwert.
  * **PenReader SDK** (s. [[start#Quellennachweis und Literaturverzeichnis|[3]]]): Das Online-Tool dieses Pakets unterstützt lt. Anbieter 42 unterschiedliche Sprachen mit höchster Erkennungsgenauigkeit. Leider existiert nur eine Online-API, die die digitalisierte Eingabe (//Digital Ink//) im JSON-Format entgegennimmt und das Erkennungsergebnis zurückliefert. Soweit es sich der Homepage entnehmen lässt, existiert keine kostenlose Download-Version. Da mit dieser Architektur ein dauerhafter Internetzugang erforderlich und durch den Kommunikationsaufwand Performance-Probleme erwartbar gewesen wären, schied diese Variante aus.
  * **LipiTK** (s. [[start#Quellennachweis und Literaturverzeichnis|[4]]]): Das auf //SourceForge (r)// verfügbare Open-Source-Paket bietet Android-Unterstützung und eine Java-API an, ist jedoch für sich genommen nur in der Lage, einzelne Zeichen zu erkennen. Worterkennung oder Weitergehendes ist nicht implementiert, ebenso fehlt eine Zeichensegmentierung für den Fall der Eingabe mehrerer Zeichen. Das Projekt sieht sich als eine Grundlage für den Selbstbau einer Handschrifterkennungs-App und unterstützt den Entwickler mit zahlreichen zusätzlichen Hintergrundinformationen über die Machine-Learning-Grundlagen, mögliche Training-Verfahren, das Packaging der Software und Weiteres. Für das hier angestrebte Vorhaben ist der angebotene Funktionsumfang allerdings zu gering. Daher scheidet diese Variante für uns aus.
  * **Java Interactive Mathematical Handwriting Recognizer** (s. [[start#Quellennachweis und Literaturverzeichnis|[5]]]): Diese ebenfalls auf //SourceForge(r)// verfügbare Open-Source-Software ist spezialisiert auf die Erkennung mathematischer Formeln und daher nicht für unsere Zwecke geeignet.
  * **MyScript ATK-Android** (s. [[start#Quellennachweis und Literaturverzeichnis|[6], [7]]]): //MyScript(r)// bietet drei verschiedene Entwicklungs-Kits: 
     * //MyScript Applikation Toolkit (ATK)//, die erste Variante zur lokalen HWR. In einer schriftlichen Anfrage an die Kundenbetreuung, in der wir unsere geplante Anwendung geschildert haben, wurde uns dieses Paket empfohlen.
     * //MyScript Software Development Kit (SDK)//, das neueste Produkt dieses Anbieters, welches die Weiterentwicklung des ATK darstellt.
     * //MyScript Cloud Development Kit (CDK)//, bei dem die HWR auf einem Server ausgeführt wird und über eine Online-API ansprechbar ist.
   * Alle drei Varianten bieten jeweils Packages zur Erkennung von einzelnen Zeichen, Text, mathematischen Gleichungen und geometrischen Formen an. Die Android-Variante des ATK kommt für jede dieser Packages mit einem eigenen Android-Widget, welches die Texteingabe und die Ergebnisausgabe in einem ansehnlichen Layout übernimmt. Es werden über 50 verschiedene Sprachen und "alle Arten von Handschrift" sowie Gesten erkannt. Besonders herausgehoben wird an einigen Stellen der Website, dass auch "superimposed writing" erkannt wird, d.h. das überlagerte Schreiben einzelner Zeichen übereinander. Es stehen ausführliche Dokumentationen zur allgemeinen Nutzung (z.B. Download, Lizenzenverwaltung), zur API (Javadocs) und sogar zu allgemeinen HWR-Prinzipien zur Verfügung. Überdies gibt es ein aktives Entwicklerforum, in dem man schnell und kostenlos Hilfe von Mitarbeitern bekommt. Leider stellte sich im Laufe der Zeit heraus, dass die Website sehr unübersichtlich strukturiert ist und es häufig schwerfällt, einmal gefundene Informationen wiederzufinden. Außerdem fehlen einige API-Dokumentationen von Packages, auf die man beim Entwickeln angewiesen ist. Die Vorteile überragen diese Nachteile jedoch klar.
   * **Evernote Android SDK** (s. [[start#Quellennachweis und Literaturverzeichnis|[5]]]): Diese Software sei nur der Vollständigkeit halber erwähnt und um zu zeigen, wie wenige wirkliche Treffer die Suche nach Frameworks ergeben hat. Dieses Produkt dient lediglich der Abspeicherung und Weiterverwendung reiner handschriftlicher Notizen; es wird keine HWR angeboten.

Der Vergleich der hier vorgestellten Vertreter führte eindeutig auf die Vorauswahl der Varianten **WritePad SDK 5.0 for Android** und **MyScript ATK-Android**, wobei ersteres klar durch die fehlende Java-Dokumentation im Nachteil war. Die ausführliche Dokumentation, Beispielanwendungen, sowie der hilfreiche Kontakt zum Vertrieb des Anbieters festigten die Entscheidung für das **MyScript ATK-Android**.
